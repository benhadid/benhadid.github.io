---
type: lab
date: 2019-09-19T4:00:00+4:30
title: 'Travaux Pratiques #8 - Banc de registres'
#attachment: /static_files/labs/lab.zip
#solutions: /static_files/labs/lab_solutions.pdf
due_event: 
    type: due
    date: 2019-09-26T23:59:00+3:30
    description: 'Travaux Pratiques #8 - à remettre'
---

# Objectifs

- Apprendre le fonctionnement du banc de registres dans un processeur
- Apprendre à modéliser des circuits logiques avancés avec Logisim

# Énoncé

Cliquez [ici](./regfile_starter.zip) pour récupérer le fichier de démarrage pour ce TP, puis décompressez le dans le répertoire de votre choix. Voici la liste des fichiers que vous devez avoir :

```shell
regfile_starter
  ├── regfile.circ
  ├── regfile_harness.circ
  ├── tests
  │   ├── config.json
  │   ├── logisim-evolution.jar
  │   ├── regfile_insert.circ
  │   ├── regfile_insert.out
  │   ├── regfile_zero.circ
  │   ├── regfile_zero.out
  │   └── test.py
  └── test.sh
 ```

<div class="bs-callout bs-callout-danger">
 <b>REMARQUE</b> : Seul le fichier <b>regfile.circ</b> doit être modifié et soumis à l'évaluateur automatique.
</div>

Pour ce TP, vous utiliserez [Logisim](/assets/bin/logisim-evolution.jar) pour implémenter un banc de registres simple pour un processeur 16 bits. Votre banc de registres doit avoir six entrées

<div class="col-md-12">
<table class="table table-hover" >
  <thead>
  </thead>
  <tbody>
    <tr>
      <th class="text-left" class="col-md-2" scope="col">Nom</th>
      <th class="text-center" class="col-md-2" scope="col">Largeur en bits</th>      
      <th class="text-left" scope="col">Description</th>      
    </tr>
    <tr>
      <th class="text-left">Clock</th>
      <td class="text-center">1</td>      
      <td class="text-left">Entrée fournissant l'horloge. Ce signal peut être acheminé à d'autres sous-circuits ou directement raccordé aux entrées d’horloge des unités de mémoire dans Logisim, mais ne doit en aucune façon être raccordé à des portes logiques (c.-à-d. ne l’inversez pas, n'appliquez pas la porte "ET" dessus, etc.)</td>      
    </tr>
    <tr>
      <th class="text-left">Write Enable</th>
      <td class="text-center">1</td>      
      <td class="text-left">Active l'écriture des données au prochain front montant de l'horloge</td>      
    </tr>
    <tr>
      <th class="text-left">Read Register 1</th>
      <td class="text-center">3</td>      
      <td class="text-left">Détermine quelle valeur de registre est envoyée à la sortie <b>Read Data 1</b>, voir ci-dessous</td>      
    </tr>    
    <tr>
      <th class="text-left">Read Register 2</th>
      <td class="text-center">3</td>      
      <td class="text-left">Détermine quelle valeur de registre est envoyée à la sortie <b>Read Data 2</b>, voir ci-dessous</td>      
    </tr>      
    <tr>
      <th class="text-left">Write Register</th>
      <td class="text-center">3</td>
      <td class="text-left">Sélectionne le registre pour écriture au prochain front montant de l'horloge, en supposant que <b>Write Enable</b> est à 1</td>      
    </tr>    
    <tr>
      <th class="text-left">Write Data</th>
      <td class="text-center">16</td>
      <td class="text-left">
      Contient les données à écrire dans le registre identifié par l'entrée <b>Write Register</b> au prochain front montant de l'horloge, en supposant que <b>Write Enable</b> est à 1</td>      
    </tr>        
  </tbody>
</table>
</div>

... et six sorties

<div class="col-md-12">
<table class="table table-hover" >
  <thead>
  </thead>
  <tbody>
    <tr>
      <th class="text-left" class="col-md-2" scope="col">Nom</th>
      <th class="text-center" class="col-md-2" scope="col">Largeur en bits</th>      
      <th class="text-left" scope="col">Description</th>      
    </tr>
    <tr>
      <th class="text-left">Read Data 1</th>
      <td class="text-center">16</td>      
      <td class="text-left">Renvoie la valeur contenue dans le registre identifié par l'entrée <b>Read Register 1</b></td>      
    </tr>

    <tr>
      <th class="text-left">Read Data 2</th>
      <td class="text-center">16</td>      
      <td class="text-left">Renvoie la valeur contenue dans le registre identifié par l'entrée <b>Read Register 2</b></td>      
    </tr>

    <tr>
      <th class="text-left">$s0</th>
      <td class="text-center">16</td>      
      <td class="text-left">Renvoie la valeur contenue dans le registre $s0 (sortie utilisée pour le débogage et les tests)</td>      
    </tr>

    <tr>
      <th class="text-left">$s1</th>
      <td class="text-center">16</td>      
      <td class="text-left">Renvoie la valeur contenue dans le registre $s1 (sortie utilisée pour le débogage et les tests)</td>      
    </tr>

    <tr>
      <th class="text-left">$s2</th>
      <td class="text-center">16</td>      
      <td class="text-left">Renvoie la valeur contenue dans le registre $s2 (sortie utilisée pour le débogage et les tests)</td>      
    </tr>

    <tr>
      <th class="text-left">$ra</th>
      <td class="text-center">16</td>      
      <td class="text-left">Renvoie la valeur contenue dans le registre $ra (sortie utilisée pour le débogage et les tests)</td>      
    </tr>

    <tr>
      <th class="text-left">$sp</th>
      <td class="text-center">16</td>      
      <td class="text-left">Renvoie la valeur contenue dans le registre $sp (sortie utilisée pour le débogage et les tests)</td>      
    </tr>
  </tbody>
</table>
</div>

Enfin, voici la liste des registres que votre banc de registres doit avoir

<div class="col-md-4">
<table class="table table-hover" >
  <thead>
  </thead>
  <tbody>
    <tr>
      <th class="text-left" scope="col">N° du Registre</th>
      <th class="text-center" scope="col">Nom du registre</th>      
    </tr>
    <tr>
      <th class="text-center">0</th>
      <td class="text-center">$0</td>      
    </tr>
    <tr>
      <th class="text-center">1</th>
      <td class="text-center">$ra</td>      
    </tr>
    <tr>
      <th class="text-center">2</th>
      <td class="text-center">$s0</td>      
    </tr>
    <tr>
      <th class="text-center">3</th>
      <td class="text-center">$s1</td>      
    </tr>

    <tr>
      <th class="text-center">4</th>
      <td class="text-center">$s2</td>      
    </tr>

    <tr>
      <th class="text-center">5</th>
      <td class="text-center">$a0</td>      
    </tr>

    <tr>
      <th class="text-center">6</th>
      <td class="text-center">$v0</td>      
    </tr>

    <tr>
      <th class="text-center">7</th>
      <td class="text-center">$sp</td>      
    </tr>      
  </tbody>
</table>
</div>

**REMARQUES** :
 - Les sorties **$s0 - $s2**, **$ra** et **$sp** sont présentes parce que ces registres sont plus spéciaux que les autres - ils sont utilisés à des fins de test et de débogage et seront utilisés dans les tests de l'évaluateur automatique ! Dans la réalité ces sorties n'existent pas. Pour ce TP, assurez-vous qu'ils sont définis correctement ! S'ils ne le sont pas, l'évaluateur automatique ne pourra pas évaluer votre TP correctement ( et vous obtiendrez un zéro. :( ).

 - Vous pouvez modifié le fichier **regfile.circ** comme bon vous semble, mais les sorties doivent être conforme au comportement spécifié ci-dessus.

 - Vous pouvez utiliser tout bloc ou fonction intégrée de Logisim pour implémenter votre circuit.

 - Les registres dans votre circuit doivent être pilotés par un **front descendant** de l'horloge (voir la figure ci-dessous).

 ![front descendant](/assets/images/falling_edge.png){: .center-l2ado-image height="45%" width="45%"}

# Tester votre banc de registres

Des exemples de tests pour votre banc de registres sont inclus dans le fichier de démarrage **regfile_starter.zip** - il suffit d'exécuter le script `./test.sh` depuis une console pour vérifier votre implémentation (Veuillez noter que ce script ne fonctionne qu'avec Python 3).

**Les tests fournis ne sont PAS exhaustifs et vous devrez effectuer d'autres tests par vous-même.**

<div class="bs-callout bs-callout-danger">
  <h4>ATTENTION</h4>

  <p>Votre fichier <b>regfile.circ</b> doit correspondre au socle <b>regfile_harness.circ</b> fourni. Cela signifie que vous devez veiller à ne pas réorganiser les entrées ou les sorties. Si vous avez besoin de plus d'espace, vous pouvez les déplacer en faisant attention à conserver leurs positionnements relatifs les uns par rapport aux autres.</p>

  <p>Pour vérifier que vos modifications n’ont pas rompu les correspondances entrés/sorties entre les deux circuits, ouvrez simplement le fichier <b>regfile_harness.circ</b> et assurez-vous qu’il n’y a pas d’erreurs et que le circuit fonctionne correctement.</p>

  <p>L'évaluateur automatique utilise un fichier similaire pour tester et évaluer votre fichier <b>regfile.circ</b>. Vous devez donc utiliser une copie <b>non modifiée</b> de <b>regfile_harness.circ</b> pour vous assurer que votre fichier <b>regfile.circ</b> est correctement chargé avant de le soumettre pour évaluation.</p>
</div>

Si votre circuit échoue à un test et que vous voulez savoir ce qui ne va pas, allez dans votre dossier de tests et ouvrez le fichier socle correspondant au test. Faites un clic droit sur votre implémentation du banc de registres et choisissez "view main". Vous pouvez ensuite voir votre fichier avec les entrées fournies par le test. Assurez-vous que votre implémentation du banc de registres se comporte comme prévu !
